// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     create_user.avsc
 */
package example

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)

  
type CreateUser struct {

	
	
		Id string
	

	
	
		UserName string
	

	
	
		Address string
	

}

func NewCreateUser() (*CreateUser) {
	return &CreateUser{}
}

func DeserializeCreateUser(r io.Reader) (*CreateUser, error) {
	t := NewCreateUser()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func DeserializeCreateUserFromSchema(r io.Reader, schema string) (*CreateUser, error) {
	t := NewCreateUser()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func writeCreateUser(r *CreateUser, w io.Writer) error {
	var err error
	
	err = vm.WriteString( r.Id, w)
	if err != nil {
		return err			
	}
	
	err = vm.WriteString( r.UserName, w)
	if err != nil {
		return err			
	}
	
	err = vm.WriteString( r.Address, w)
	if err != nil {
		return err			
	}
	
	return err
}

func (r *CreateUser) Serialize(w io.Writer) error {
	return writeCreateUser(r, w)
}

func (r *CreateUser) Schema() string {
	return "{\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"}],\"name\":\"kata.CreateUser\",\"type\":\"record\"}"
}

func (r *CreateUser) SchemaName() string {
	return "kata.CreateUser"
}

func (_ *CreateUser) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *CreateUser) SetInt(v int32) { panic("Unsupported operation") }
func (_ *CreateUser) SetLong(v int64) { panic("Unsupported operation") }
func (_ *CreateUser) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *CreateUser) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *CreateUser) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *CreateUser) SetString(v string) { panic("Unsupported operation") }
func (_ *CreateUser) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *CreateUser) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
			return (*types.String)(&r.Id)
		
	
	case 1:
		
		
			return (*types.String)(&r.UserName)
		
	
	case 2:
		
		
			return (*types.String)(&r.Address)
		
	
	}
	panic("Unknown field index")
}

func (r *CreateUser) SetDefault(i int) {
	switch (i) {
	
        
	
        
	
        
	
	}
	panic("Unknown field index")
}

func (_ *CreateUser) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *CreateUser) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *CreateUser) Finalize() { }
